import type { FC, ReactElement } from 'react';
import type { StyleProp, TouchableOpacityProps, ViewStyle } from 'react-native';
import type { DoobooTheme } from '@dooboo-ui/theme';
import type { IconName } from '../Icon';
type Styles = {
    container?: StyleProp<ViewStyle>;
    icon?: StyleProp<ViewStyle>;
    disabled?: StyleProp<ViewStyle>;
    hovered?: StyleProp<ViewStyle>;
};
type ButtonType = 'text' | 'solid' | 'outlined';
type ButtonColorType = 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light';
type ButtonSizeType = 'small' | 'medium' | 'large';
export declare const ButtonStyles: ({ theme, type, color, size, loading, disabled, }: {
    theme?: DoobooTheme;
    type?: ButtonType;
    color?: ButtonColorType;
    size?: ButtonSizeType;
    disabled?: boolean;
    loading?: boolean;
}) => {
    padding?: string;
    backgroundColor?: string;
    borderColor?: string;
    borderWidth?: string;
    buttonSize?: string;
    iconColor?: string;
    iconSize?: number;
    disabledBackgroundColor: string;
    disabledBorderColor: string;
    disabledTextColor: string;
};
export type IconButtonProps = {
    testID?: string;
    type?: ButtonType;
    color?: ButtonColorType;
    size?: ButtonSizeType;
    disabled?: boolean;
    loading?: boolean;
    loadingElement?: ReactElement;
    icon?: IconName;
    iconElement?: ReactElement;
    style?: StyleProp<ViewStyle>;
    styles?: Styles;
    onPress?: TouchableOpacityProps['onPress'];
    activeOpacity?: TouchableOpacityProps['activeOpacity'];
    touchableOpacityProps?: Partial<TouchableOpacityProps>;
};
export declare const IconButton: FC<IconButtonProps>;
export {};
