import React from 'react';
import { Text } from 'react-native';
export declare const Typography: {
    Title: React.FC<Pick<import("react-native").TextProps & {
        theme?: import("@emotion/react").Theme;
        as?: React.ElementType<any>;
    } & {
        theme: import("@dooboo-ui/theme").DoobooTheme;
    } & {
        ref?: React.Ref<Text>;
    }, keyof import("react-native").TextProps | "as" | "ref"> & {
        theme?: import("@emotion/react").Theme;
    }>;
    Heading1: React.FC<Pick<import("react-native").TextProps & {
        theme?: import("@emotion/react").Theme;
        as?: React.ElementType<any>;
    } & {
        theme: import("@dooboo-ui/theme").DoobooTheme;
    } & {
        ref?: React.Ref<Text>;
    }, keyof import("react-native").TextProps | "as" | "ref"> & {
        theme?: import("@emotion/react").Theme;
    }>;
    Heading2: React.FC<Pick<import("react-native").TextProps & {
        theme?: import("@emotion/react").Theme;
        as?: React.ElementType<any>;
    } & {
        theme: import("@dooboo-ui/theme").DoobooTheme;
    } & {
        ref?: React.Ref<Text>;
    }, keyof import("react-native").TextProps | "as" | "ref"> & {
        theme?: import("@emotion/react").Theme;
    }>;
    Heading3: React.FC<Pick<import("react-native").TextProps & {
        theme?: import("@emotion/react").Theme;
        as?: React.ElementType<any>;
    } & {
        theme: import("@dooboo-ui/theme").DoobooTheme;
    } & {
        ref?: React.Ref<Text>;
    }, keyof import("react-native").TextProps | "as" | "ref"> & {
        theme?: import("@emotion/react").Theme;
    }>;
    Body1: React.FC<Pick<import("react-native").TextProps & {
        theme?: import("@emotion/react").Theme;
        as?: React.ElementType<any>;
    } & {
        theme: import("@dooboo-ui/theme").DoobooTheme;
    } & {
        ref?: React.Ref<Text>;
    }, keyof import("react-native").TextProps | "as" | "ref"> & {
        theme?: import("@emotion/react").Theme;
    }>;
    Body2: React.FC<Pick<import("react-native").TextProps & {
        theme?: import("@emotion/react").Theme;
        as?: React.ElementType<any>;
    } & {
        theme: import("@dooboo-ui/theme").DoobooTheme;
    } & {
        ref?: React.Ref<Text>;
    }, keyof import("react-native").TextProps | "as" | "ref"> & {
        theme?: import("@emotion/react").Theme;
    }>;
};
export declare const TypographyInverted: {
    Title: React.FC<Pick<import("react-native").TextProps & {
        theme?: import("@emotion/react").Theme;
        as?: React.ElementType<any>;
    } & {
        theme: import("@dooboo-ui/theme").DoobooTheme;
    } & {
        ref?: React.Ref<Text>;
    }, keyof import("react-native").TextProps | "as" | "ref"> & {
        theme?: import("@emotion/react").Theme;
    }>;
    Heading1: React.FC<Pick<import("react-native").TextProps & {
        theme?: import("@emotion/react").Theme;
        as?: React.ElementType<any>;
    } & {
        theme: import("@dooboo-ui/theme").DoobooTheme;
    } & {
        ref?: React.Ref<Text>;
    }, keyof import("react-native").TextProps | "as" | "ref"> & {
        theme?: import("@emotion/react").Theme;
    }>;
    Heading2: React.FC<Pick<import("react-native").TextProps & {
        theme?: import("@emotion/react").Theme;
        as?: React.ElementType<any>;
    } & {
        theme: import("@dooboo-ui/theme").DoobooTheme;
    } & {
        ref?: React.Ref<Text>;
    }, keyof import("react-native").TextProps | "as" | "ref"> & {
        theme?: import("@emotion/react").Theme;
    }>;
    Heading3: React.FC<Pick<import("react-native").TextProps & {
        theme?: import("@emotion/react").Theme;
        as?: React.ElementType<any>;
    } & {
        theme: import("@dooboo-ui/theme").DoobooTheme;
    } & {
        ref?: React.Ref<Text>;
    }, keyof import("react-native").TextProps | "as" | "ref"> & {
        theme?: import("@emotion/react").Theme;
    }>;
    Body1: React.FC<Pick<import("react-native").TextProps & {
        theme?: import("@emotion/react").Theme;
        as?: React.ElementType<any>;
    } & {
        theme: import("@dooboo-ui/theme").DoobooTheme;
    } & {
        ref?: React.Ref<Text>;
    }, keyof import("react-native").TextProps | "as" | "ref"> & {
        theme?: import("@emotion/react").Theme;
    }>;
    Body2: React.FC<Pick<import("react-native").TextProps & {
        theme?: import("@emotion/react").Theme;
        as?: React.ElementType<any>;
    } & {
        theme: import("@dooboo-ui/theme").DoobooTheme;
    } & {
        ref?: React.Ref<Text>;
    }, keyof import("react-native").TextProps | "as" | "ref"> & {
        theme?: import("@emotion/react").Theme;
    }>;
};
export declare const setFontFamily: (fontFamily: string) => void;
