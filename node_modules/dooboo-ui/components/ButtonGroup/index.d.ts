import type { ReactElement } from 'react';
import type { StyleProp, ViewStyle, TouchableOpacityProps } from 'react-native';
interface Styles {
    container?: StyleProp<ViewStyle>;
    button?: StyleProp<ViewStyle>;
}
export type ButtonGroupProps<T> = {
    data: T[];
    renderItem: ButtonGroupRenderItem<T>;
    direction?: 'row' | 'column';
    testID?: string;
    styles?: Styles;
    onPress?: (index: number, item: T) => void;
    touchableOpacityProps?: TouchableOpacityProps;
    borderStyle?: {
        color?: string;
        width?: number;
        radius?: number;
    };
    selectedIndex?: number;
};
export type ButtonGroupRenderItem<ItemT> = (info: {
    item: ItemT;
    selected: boolean;
    index: number;
}) => ReactElement;
export declare function ButtonGroup<T>({ testID, styles, data, renderItem, onPress, touchableOpacityProps, direction, selectedIndex, borderStyle: { width: borderWidth, color: borderColor, radius: borderRadius, }, }: ButtonGroupProps<T>): ReactElement;
export declare namespace ButtonGroup {
    var defaultProps: {
        styles: {
            container: {
                alignSelf: string;
            };
        };
    };
}
export {};
