{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import{nanoid}from'nanoid/non-secure';var BaseRouter={getStateForAction:function getStateForAction(state,action){switch(action.type){case'SET_PARAMS':{var index=action.source?state.routes.findIndex(function(r){return r.key===action.source;}):state.index;if(index===-1){return null;}return _objectSpread(_objectSpread({},state),{},{routes:state.routes.map(function(r,i){return i===index?_objectSpread(_objectSpread({},r),{},{params:_objectSpread(_objectSpread({},r.params),action.payload.params)}):r;})});}case'RESET':{var nextState=action.payload;if(nextState.routes.length===0||nextState.routes.some(function(route){return!state.routeNames.includes(route.name);})){return null;}if(nextState.stale===false){if(state.routeNames.length!==nextState.routeNames.length||nextState.routeNames.some(function(name){return!state.routeNames.includes(name);})){return null;}return _objectSpread(_objectSpread({},nextState),{},{routes:nextState.routes.map(function(route){return route.key?route:_objectSpread(_objectSpread({},route),{},{key:`${route.name}-${nanoid()}`});})});}return nextState;}default:return null;}},shouldActionChangeFocus:function shouldActionChangeFocus(action){return action.type==='NAVIGATE';}};export default BaseRouter;","map":{"version":3,"names":["nanoid","BaseRouter","getStateForAction","state","action","type","index","source","routes","findIndex","r","key","_objectSpread","map","i","params","payload","nextState","length","some","route","routeNames","includes","name","stale","shouldActionChangeFocus"],"sources":["C:\\Users\\ariel\\Desktop\\projects\\lift-finder\\v1\\my-app\\node_modules\\@react-navigation\\routers\\src\\BaseRouter.tsx"],"sourcesContent":["import { nanoid } from 'nanoid/non-secure';\n\nimport type {\n  CommonNavigationAction,\n  NavigationState,\n  PartialState,\n} from './types';\n\n/**\n * Base router object that can be used when writing custom routers.\n * This provides few helper methods to handle common actions such as `RESET`.\n */\nconst BaseRouter = {\n  getStateForAction<State extends NavigationState>(\n    state: State,\n    action: CommonNavigationAction\n  ): State | PartialState<State> | null {\n    switch (action.type) {\n      case 'SET_PARAMS': {\n        const index = action.source\n          ? state.routes.findIndex((r) => r.key === action.source)\n          : state.index;\n\n        if (index === -1) {\n          return null;\n        }\n\n        return {\n          ...state,\n          routes: state.routes.map((r, i) =>\n            i === index\n              ? { ...r, params: { ...r.params, ...action.payload.params } }\n              : r\n          ),\n        };\n      }\n\n      case 'RESET': {\n        const nextState = action.payload as State | PartialState<State>;\n\n        if (\n          nextState.routes.length === 0 ||\n          nextState.routes.some(\n            (route: { name: string }) => !state.routeNames.includes(route.name)\n          )\n        ) {\n          return null;\n        }\n\n        if (nextState.stale === false) {\n          if (\n            state.routeNames.length !== nextState.routeNames.length ||\n            nextState.routeNames.some(\n              (name) => !state.routeNames.includes(name)\n            )\n          ) {\n            return null;\n          }\n\n          return {\n            ...nextState,\n            routes: nextState.routes.map((route) =>\n              route.key ? route : { ...route, key: `${route.name}-${nanoid()}` }\n            ),\n          };\n        }\n\n        return nextState;\n      }\n\n      default:\n        return null;\n    }\n  },\n\n  shouldActionChangeFocus(action: CommonNavigationAction) {\n    return action.type === 'NAVIGATE';\n  },\n};\n\nexport default BaseRouter;\n"],"mappings":"+qBAAA,OAASA,MAAM,KAAQ,mBAAmB,CAY1C,GAAM,CAAAC,UAAU,CAAG,CACjBC,iBAAiB,UAAAA,kBACfC,KAAY,CACZC,MAA8B,CACM,CACpC,OAAQA,MAAM,CAACC,IAAI,EACjB,IAAK,YAAY,CAAE,CACjB,GAAM,CAAAC,KAAK,CAAGF,MAAM,CAACG,MAAM,CACvBJ,KAAK,CAACK,MAAM,CAACC,SAAS,CAAE,SAAAC,CAAC,QAAK,CAAAA,CAAC,CAACC,GAAG,GAAKP,MAAM,CAACG,MAAM,GAAC,CACtDJ,KAAK,CAACG,KAAK,CAEf,GAAIA,KAAK,GAAK,CAAC,CAAC,CAAE,CAChB,MAAO,KAAI,CACb,CAEA,OAAAM,aAAA,CAAAA,aAAA,IACKT,KAAK,MACRK,MAAM,CAAEL,KAAK,CAACK,MAAM,CAACK,GAAG,CAAC,SAACH,CAAC,CAAEI,CAAC,QAC5B,CAAAA,CAAC,GAAKR,KAAK,CAAAM,aAAA,CAAAA,aAAA,IACFF,CAAC,MAAEK,MAAM,CAAAH,aAAA,CAAAA,aAAA,IAAOF,CAAC,CAACK,MAAM,EAAKX,MAAM,CAACY,OAAO,CAACD,MAAA,CAAO,GACxDL,CAAC,MAGX,CAEA,IAAK,OAAO,CAAE,CACZ,GAAM,CAAAO,SAAS,CAAGb,MAAM,CAACY,OAAsC,CAE/D,GACEC,SAAS,CAACT,MAAM,CAACU,MAAM,GAAK,CAAC,EAC7BD,SAAS,CAACT,MAAM,CAACW,IAAI,CAClB,SAAAC,KAAuB,QAAK,CAACjB,KAAK,CAACkB,UAAU,CAACC,QAAQ,CAACF,KAAK,CAACG,IAAI,CAAC,GACpE,CACD,CACA,MAAO,KAAI,CACb,CAEA,GAAIN,SAAS,CAACO,KAAK,GAAK,KAAK,CAAE,CAC7B,GACErB,KAAK,CAACkB,UAAU,CAACH,MAAM,GAAKD,SAAS,CAACI,UAAU,CAACH,MAAM,EACvDD,SAAS,CAACI,UAAU,CAACF,IAAI,CACtB,SAAAI,IAAI,QAAK,CAACpB,KAAK,CAACkB,UAAU,CAACC,QAAQ,CAACC,IAAI,CAAC,GAC3C,CACD,CACA,MAAO,KAAI,CACb,CAEA,OAAAX,aAAA,CAAAA,aAAA,IACKK,SAAS,MACZT,MAAM,CAAES,SAAS,CAACT,MAAM,CAACK,GAAG,CAAE,SAAAO,KAAK,QACjC,CAAAA,KAAK,CAACT,GAAG,CAAGS,KAAK,CAAAR,aAAA,CAAAA,aAAA,IAAQQ,KAAK,MAAET,GAAG,CAAG,GAAES,KAAK,CAACG,IAAK,IAAGvB,MAAM,EAAG,IAAG,MAGxE,CAEA,MAAO,CAAAiB,SAAS,CAClB,CAEA,QACE,MAAO,KAAI,CAAC,CAElB,CAAC,CAEDQ,uBAAuB,UAAAA,wBAACrB,MAA8B,CAAE,CACtD,MAAO,CAAAA,MAAM,CAACC,IAAI,GAAK,UAAU,CACnC,CACF,CAAC,CAED,cAAe,CAAAJ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}