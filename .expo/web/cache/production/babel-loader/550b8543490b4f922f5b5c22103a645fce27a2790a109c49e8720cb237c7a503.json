{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{useEffect,useState}from'react';import Dimensions from\"react-native-web/dist/exports/Dimensions\";var isOrientationPortrait=function isOrientationPortrait(_ref){var width=_ref.width,height=_ref.height;return height>=width;};var isOrientationLandscape=function isOrientationLandscape(_ref2){var width=_ref2.width,height=_ref2.height;return width>=height;};export function useDeviceOrientation(){var screen=Dimensions.get('screen');var initialState={portrait:isOrientationPortrait(screen),landscape:isOrientationLandscape(screen)};var _useState=useState(initialState),_useState2=_slicedToArray(_useState,2),orientation=_useState2[0],setOrientation=_useState2[1];useEffect(function(){var onChange=function onChange(_ref3){var screen=_ref3.screen;setOrientation({portrait:isOrientationPortrait(screen),landscape:isOrientationLandscape(screen)});};var subscription=Dimensions.addEventListener('change',onChange);return function(){if(typeof(subscription===null||subscription===void 0?void 0:subscription.remove)==='function'){subscription.remove();}};},[]);return orientation.portrait?'PORTRAIT':'LANDSCAPE';}","map":{"version":3,"names":["useEffect","useState","Dimensions","isOrientationPortrait","_ref","width","height","isOrientationLandscape","_ref2","useDeviceOrientation","screen","get","initialState","portrait","landscape","_useState","_useState2","_slicedToArray","orientation","setOrientation","onChange","_ref3","subscription","addEventListener","remove"],"sources":["C:\\Users\\ariel\\Desktop\\projects\\lift-finder\\v1\\my-app\\node_modules\\react-native-element-dropdown\\src\\useDeviceOrientation.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-shadow */\nimport { useEffect, useState } from 'react';\nimport { Dimensions, ScaledSize } from 'react-native';\n\nconst isOrientationPortrait = ({ width, height }: ScaledSize) =>\n  height >= width;\nconst isOrientationLandscape = ({ width, height }: ScaledSize) =>\n  width >= height;\n\nexport function useDeviceOrientation() {\n  const screen = Dimensions.get('screen');\n  const initialState = {\n    portrait: isOrientationPortrait(screen),\n    landscape: isOrientationLandscape(screen),\n  };\n\n  const [orientation, setOrientation] = useState(initialState);\n\n  useEffect(() => {\n    const onChange = ({ screen }: { screen: ScaledSize }) => {\n      setOrientation({\n        portrait: isOrientationPortrait(screen),\n        landscape: isOrientationLandscape(screen),\n      });\n    };\n\n    const subscription = Dimensions.addEventListener('change', onChange);\n\n    return () => {\n      if (typeof subscription?.remove === 'function') {\n        subscription.remove();\n      }\n    };\n  }, []);\n\n  return orientation.portrait ? 'PORTRAIT' : 'LANDSCAPE';\n}\n"],"mappings":"iEACA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,QAAAC,UAAA,gDAG3C,GAAM,CAAAC,qBAAqB,CAAG,QAAxB,CAAAA,qBAAqBA,CAAGC,IAAA,KAAG,CAAAC,KAAK,CAAsBD,IAAA,CAA3BC,KAAK,CAAEC,MAAA,CAAoBF,IAAA,CAApBE,MAAA,CAAoB,MAC1D,CAAAA,MAAM,EAAID,KAAK,GACjB,GAAM,CAAAE,sBAAsB,CAAG,QAAzB,CAAAA,sBAAsBA,CAAGC,KAAA,KAAG,CAAAH,KAAK,CAAsBG,KAAA,CAA3BH,KAAK,CAAEC,MAAA,CAAoBE,KAAA,CAApBF,MAAA,CAAoB,MAC3D,CAAAD,KAAK,EAAIC,MAAM,GAEjB,MAAO,SAAS,CAAAG,oBAAoBA,CAAA,CAAG,CACrC,GAAM,CAAAC,MAAM,CAAGR,UAAU,CAACS,GAAG,CAAC,QAAQ,CAAC,CACvC,GAAM,CAAAC,YAAY,CAAG,CACnBC,QAAQ,CAAEV,qBAAqB,CAACO,MAAM,CAAC,CACvCI,SAAS,CAAEP,sBAAsB,CAACG,MAAM,CAC1C,CAAC,CAED,IAAAK,SAAA,CAAsCd,QAAQ,CAACW,YAAY,CAAC,CAAAI,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAArDG,WAAW,CAAAF,UAAA,IAAEG,cAAc,CAAAH,UAAA,IAElChB,SAAS,CAAC,UAAM,CACd,GAAM,CAAAoB,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAGC,KAAA,CAAwC,IAArC,CAAAX,MAAA,CAAgCW,KAAA,CAAhCX,MAAA,CAClBS,cAAc,CAAC,CACbN,QAAQ,CAAEV,qBAAqB,CAACO,MAAM,CAAC,CACvCI,SAAS,CAAEP,sBAAsB,CAACG,MAAM,CAC1C,CAAC,CAAC,CACJ,CAAC,CAED,GAAM,CAAAY,YAAY,CAAGpB,UAAU,CAACqB,gBAAgB,CAAC,QAAQ,CAAEH,QAAQ,CAAC,CAEpE,MAAO,WAAM,CACX,GAAI,OAAOE,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAEE,MAAM,IAAK,UAAU,CAAE,CAC9CF,YAAY,CAACE,MAAM,EAAE,CACvB,CACF,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAAAN,WAAW,CAACL,QAAQ,CAAG,UAAU,CAAG,WAAW,CACxD"},"metadata":{},"sourceType":"module","externalDependencies":[]}