{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{Pager}from\"./Pager\";import{SceneView}from\"./SceneView\";import{TabBar}from\"./TabBar\";export function TabView(_ref){var onIndexChange=_ref.onIndexChange,navigationState=_ref.navigationState,renderScene=_ref.renderScene,initialLayout=_ref.initialLayout,_ref$keyboardDismissM=_ref.keyboardDismissMode,keyboardDismissMode=_ref$keyboardDismissM===void 0?'auto':_ref$keyboardDismissM,_ref$lazy=_ref.lazy,lazy=_ref$lazy===void 0?false:_ref$lazy,_ref$lazyPreloadDista=_ref.lazyPreloadDistance,lazyPreloadDistance=_ref$lazyPreloadDista===void 0?0:_ref$lazyPreloadDista,onSwipeStart=_ref.onSwipeStart,onSwipeEnd=_ref.onSwipeEnd,_ref$renderLazyPlaceh=_ref.renderLazyPlaceholder,renderLazyPlaceholder=_ref$renderLazyPlaceh===void 0?function(){return null;}:_ref$renderLazyPlaceh,_ref$renderTabBar=_ref.renderTabBar,renderTabBar=_ref$renderTabBar===void 0?function(props){return React.createElement(TabBar,props);}:_ref$renderTabBar,sceneContainerStyle=_ref.sceneContainerStyle,pagerStyle=_ref.pagerStyle,style=_ref.style,_ref$swipeEnabled=_ref.swipeEnabled,swipeEnabled=_ref$swipeEnabled===void 0?true:_ref$swipeEnabled,_ref$tabBarPosition=_ref.tabBarPosition,tabBarPosition=_ref$tabBarPosition===void 0?'top':_ref$tabBarPosition,_ref$animationEnabled=_ref.animationEnabled,animationEnabled=_ref$animationEnabled===void 0?true:_ref$animationEnabled,overScrollMode=_ref.overScrollMode;var _React$useState=React.useState(_objectSpread({width:0,height:0},initialLayout)),_React$useState2=_slicedToArray(_React$useState,2),layout=_React$useState2[0],setLayout=_React$useState2[1];var jumpToIndex=function jumpToIndex(index){if(index!==navigationState.index){onIndexChange(index);}};var handleLayout=function handleLayout(e){var _e$nativeEvent$layout=e.nativeEvent.layout,height=_e$nativeEvent$layout.height,width=_e$nativeEvent$layout.width;setLayout(function(prevLayout){if(prevLayout.width===width&&prevLayout.height===height){return prevLayout;}return{height:height,width:width};});};return React.createElement(View,{onLayout:handleLayout,style:[styles.pager,style]},React.createElement(Pager,{layout:layout,navigationState:navigationState,keyboardDismissMode:keyboardDismissMode,swipeEnabled:swipeEnabled,onSwipeStart:onSwipeStart,onSwipeEnd:onSwipeEnd,onIndexChange:jumpToIndex,animationEnabled:animationEnabled,overScrollMode:overScrollMode,style:pagerStyle},function(_ref2){var position=_ref2.position,render=_ref2.render,addEnterListener=_ref2.addEnterListener,jumpTo=_ref2.jumpTo;var sceneRendererProps={position:position,layout:layout,jumpTo:jumpTo};return React.createElement(React.Fragment,null,tabBarPosition==='top'&&renderTabBar(_objectSpread(_objectSpread({},sceneRendererProps),{},{navigationState:navigationState})),render(navigationState.routes.map(function(route,i){return React.createElement(SceneView,_extends({},sceneRendererProps,{addEnterListener:addEnterListener,key:route.key,index:i,lazy:typeof lazy==='function'?lazy({route:route}):lazy,lazyPreloadDistance:lazyPreloadDistance,navigationState:navigationState,style:sceneContainerStyle}),function(_ref3){var loading=_ref3.loading;return loading?renderLazyPlaceholder({route:route}):renderScene(_objectSpread(_objectSpread({},sceneRendererProps),{},{route:route}));});})),tabBarPosition==='bottom'&&renderTabBar(_objectSpread(_objectSpread({},sceneRendererProps),{},{navigationState:navigationState})));}));}var styles=StyleSheet.create({pager:{flex:1,overflow:'hidden'}});","map":{"version":3,"names":["React","StyleSheet","View","Pager","SceneView","TabBar","TabView","_ref","onIndexChange","navigationState","renderScene","initialLayout","_ref$keyboardDismissM","keyboardDismissMode","_ref$lazy","lazy","_ref$lazyPreloadDista","lazyPreloadDistance","onSwipeStart","onSwipeEnd","_ref$renderLazyPlaceh","renderLazyPlaceholder","_ref$renderTabBar","renderTabBar","props","createElement","sceneContainerStyle","pagerStyle","style","_ref$swipeEnabled","swipeEnabled","_ref$tabBarPosition","tabBarPosition","_ref$animationEnabled","animationEnabled","overScrollMode","_React$useState","useState","_objectSpread","width","height","_React$useState2","_slicedToArray","layout","setLayout","jumpToIndex","index","handleLayout","e","_e$nativeEvent$layout","nativeEvent","prevLayout","onLayout","styles","pager","_ref2","position","render","addEnterListener","jumpTo","sceneRendererProps","Fragment","routes","map","route","i","_extends","key","_ref3","loading","create","flex","overflow"],"sources":["C:\\Users\\ariel\\Desktop\\projects\\lift-finder\\v1\\my-app\\node_modules\\react-native-tab-view\\src\\TabView.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  LayoutChangeEvent,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { Pager } from './Pager';\nimport { SceneView } from './SceneView';\nimport { TabBar } from './TabBar';\nimport type {\n  Layout,\n  NavigationState,\n  PagerProps,\n  Route,\n  SceneRendererProps,\n} from './types';\n\nexport type Props<T extends Route> = PagerProps & {\n  onIndexChange: (index: number) => void;\n  navigationState: NavigationState<T>;\n  renderScene: (props: SceneRendererProps & { route: T }) => React.ReactNode;\n  renderLazyPlaceholder?: (props: { route: T }) => React.ReactNode;\n  renderTabBar?: (\n    props: SceneRendererProps & { navigationState: NavigationState<T> }\n  ) => React.ReactNode;\n  tabBarPosition?: 'top' | 'bottom';\n  initialLayout?: Partial<Layout>;\n  lazy?: ((props: { route: T }) => boolean) | boolean;\n  lazyPreloadDistance?: number;\n  sceneContainerStyle?: StyleProp<ViewStyle>;\n  pagerStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n};\n\nexport function TabView<T extends Route>({\n  onIndexChange,\n  navigationState,\n  renderScene,\n  initialLayout,\n  keyboardDismissMode = 'auto',\n  lazy = false,\n  lazyPreloadDistance = 0,\n  onSwipeStart,\n  onSwipeEnd,\n  renderLazyPlaceholder = () => null,\n  renderTabBar = (props) => <TabBar {...props} />,\n  sceneContainerStyle,\n  pagerStyle,\n  style,\n  swipeEnabled = true,\n  tabBarPosition = 'top',\n  animationEnabled = true,\n  overScrollMode,\n}: Props<T>) {\n  const [layout, setLayout] = React.useState({\n    width: 0,\n    height: 0,\n    ...initialLayout,\n  });\n\n  const jumpToIndex = (index: number) => {\n    if (index !== navigationState.index) {\n      onIndexChange(index);\n    }\n  };\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    setLayout((prevLayout) => {\n      if (prevLayout.width === width && prevLayout.height === height) {\n        return prevLayout;\n      }\n\n      return { height, width };\n    });\n  };\n\n  return (\n    <View onLayout={handleLayout} style={[styles.pager, style]}>\n      <Pager\n        layout={layout}\n        navigationState={navigationState}\n        keyboardDismissMode={keyboardDismissMode}\n        swipeEnabled={swipeEnabled}\n        onSwipeStart={onSwipeStart}\n        onSwipeEnd={onSwipeEnd}\n        onIndexChange={jumpToIndex}\n        animationEnabled={animationEnabled}\n        overScrollMode={overScrollMode}\n        style={pagerStyle}\n      >\n        {({ position, render, addEnterListener, jumpTo }) => {\n          // All of the props here must not change between re-renders\n          // This is crucial to optimizing the routes with PureComponent\n          const sceneRendererProps = {\n            position,\n            layout,\n            jumpTo,\n          };\n\n          return (\n            <React.Fragment>\n              {tabBarPosition === 'top' &&\n                renderTabBar({\n                  ...sceneRendererProps,\n                  navigationState,\n                })}\n              {render(\n                navigationState.routes.map((route, i) => {\n                  return (\n                    <SceneView\n                      {...sceneRendererProps}\n                      addEnterListener={addEnterListener}\n                      key={route.key}\n                      index={i}\n                      lazy={typeof lazy === 'function' ? lazy({ route }) : lazy}\n                      lazyPreloadDistance={lazyPreloadDistance}\n                      navigationState={navigationState}\n                      style={sceneContainerStyle}\n                    >\n                      {({ loading }) =>\n                        loading\n                          ? renderLazyPlaceholder({ route })\n                          : renderScene({\n                              ...sceneRendererProps,\n                              route,\n                            })\n                      }\n                    </SceneView>\n                  );\n                })\n              )}\n              {tabBarPosition === 'bottom' &&\n                renderTabBar({\n                  ...sceneRendererProps,\n                  navigationState,\n                })}\n            </React.Fragment>\n          );\n        }}\n      </Pager>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  pager: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}