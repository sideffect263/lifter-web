{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import useLatestCallback from'use-latest-callback';import{TabBarIndicator}from\"./TabBarIndicator\";import{TabBarItem}from\"./TabBarItem\";import{useAnimatedValue}from\"./useAnimatedValue\";var Separator=function Separator(_ref){var width=_ref.width;return React.createElement(View,{style:{width:width}});};var getFlattenedTabWidth=function getFlattenedTabWidth(style){var tabStyle=StyleSheet.flatten(style);return tabStyle===null||tabStyle===void 0?void 0:tabStyle.width;};var getComputedTabWidth=function getComputedTabWidth(index,layout,routes,scrollEnabled,tabWidths,flattenedWidth){if(flattenedWidth==='auto'){return tabWidths[routes[index].key]||0;}switch(typeof flattenedWidth){case'number':return flattenedWidth;case'string':if(flattenedWidth.endsWith('%')){var width=parseFloat(flattenedWidth);if(Number.isFinite(width)){return layout.width*(width/100);}}}if(scrollEnabled){return layout.width/5*2;}return layout.width/routes.length;};var getMaxScrollDistance=function getMaxScrollDistance(tabBarWidth,layoutWidth){return tabBarWidth-layoutWidth;};var getTranslateX=function getTranslateX(scrollAmount,maxScrollDistance){return Animated.multiply(Platform.OS==='android'&&I18nManager.isRTL?Animated.add(maxScrollDistance,Animated.multiply(scrollAmount,-1)):scrollAmount,I18nManager.isRTL?1:-1);};var getTabBarWidth=function getTabBarWidth(_ref2){var navigationState=_ref2.navigationState,layout=_ref2.layout,gap=_ref2.gap,scrollEnabled=_ref2.scrollEnabled,flattenedTabWidth=_ref2.flattenedTabWidth,tabWidths=_ref2.tabWidths;var routes=navigationState.routes;return routes.reduce(function(acc,_,i){return acc+(i>0?gap!=null?gap:0:0)+getComputedTabWidth(i,layout,routes,scrollEnabled,tabWidths,flattenedTabWidth);},0);};var normalizeScrollValue=function normalizeScrollValue(_ref3){var layout=_ref3.layout,navigationState=_ref3.navigationState,gap=_ref3.gap,scrollEnabled=_ref3.scrollEnabled,tabWidths=_ref3.tabWidths,value=_ref3.value,flattenedTabWidth=_ref3.flattenedTabWidth;var tabBarWidth=getTabBarWidth({layout:layout,navigationState:navigationState,tabWidths:tabWidths,gap:gap,scrollEnabled:scrollEnabled,flattenedTabWidth:flattenedTabWidth});var maxDistance=getMaxScrollDistance(tabBarWidth,layout.width);var scrollValue=Math.max(Math.min(value,maxDistance),0);if(Platform.OS==='android'&&I18nManager.isRTL){return maxDistance-scrollValue;}return scrollValue;};var getScrollAmount=function getScrollAmount(_ref4){var layout=_ref4.layout,navigationState=_ref4.navigationState,gap=_ref4.gap,scrollEnabled=_ref4.scrollEnabled,flattenedTabWidth=_ref4.flattenedTabWidth,tabWidths=_ref4.tabWidths;var centerDistance=Array.from({length:navigationState.index+1}).reduce(function(total,_,i){var tabWidth=getComputedTabWidth(i,layout,navigationState.routes,scrollEnabled,tabWidths,flattenedTabWidth);return total+(navigationState.index===i?(tabWidth+(gap!=null?gap:0))/2:tabWidth+(gap!=null?gap:0));},0);var scrollAmount=centerDistance-layout.width/2;return normalizeScrollValue({layout:layout,navigationState:navigationState,tabWidths:tabWidths,value:scrollAmount,gap:gap,scrollEnabled:scrollEnabled,flattenedTabWidth:flattenedTabWidth});};var getLabelTextDefault=function getLabelTextDefault(_ref5){var route=_ref5.route;return route.title;};var getAccessibleDefault=function getAccessibleDefault(_ref6){var route=_ref6.route;return typeof route.accessible!=='undefined'?route.accessible:true;};var getAccessibilityLabelDefault=function getAccessibilityLabelDefault(_ref7){var route=_ref7.route;return typeof route.accessibilityLabel==='string'?route.accessibilityLabel:typeof route.title==='string'?route.title:undefined;};var renderIndicatorDefault=function renderIndicatorDefault(props){return React.createElement(TabBarIndicator,props);};var getTestIdDefault=function getTestIdDefault(_ref8){var route=_ref8.route;return route.testID;};var MEASURE_PER_BATCH=10;export function TabBar(_ref9){var _ref9$getLabelText=_ref9.getLabelText,getLabelText=_ref9$getLabelText===void 0?getLabelTextDefault:_ref9$getLabelText,_ref9$getAccessible=_ref9.getAccessible,getAccessible=_ref9$getAccessible===void 0?getAccessibleDefault:_ref9$getAccessible,_ref9$getAccessibilit=_ref9.getAccessibilityLabel,getAccessibilityLabel=_ref9$getAccessibilit===void 0?getAccessibilityLabelDefault:_ref9$getAccessibilit,_ref9$getTestID=_ref9.getTestID,getTestID=_ref9$getTestID===void 0?getTestIdDefault:_ref9$getTestID,_ref9$renderIndicator=_ref9.renderIndicator,renderIndicator=_ref9$renderIndicator===void 0?renderIndicatorDefault:_ref9$renderIndicator,_ref9$gap=_ref9.gap,gap=_ref9$gap===void 0?0:_ref9$gap,scrollEnabled=_ref9.scrollEnabled,jumpTo=_ref9.jumpTo,navigationState=_ref9.navigationState,position=_ref9.position,activeColor=_ref9.activeColor,bounces=_ref9.bounces,contentContainerStyle=_ref9.contentContainerStyle,inactiveColor=_ref9.inactiveColor,indicatorContainerStyle=_ref9.indicatorContainerStyle,indicatorStyle=_ref9.indicatorStyle,labelStyle=_ref9.labelStyle,onTabLongPress=_ref9.onTabLongPress,onTabPress=_ref9.onTabPress,pressColor=_ref9.pressColor,pressOpacity=_ref9.pressOpacity,renderBadge=_ref9.renderBadge,renderIcon=_ref9.renderIcon,renderLabel=_ref9.renderLabel,renderTabBarItem=_ref9.renderTabBarItem,style=_ref9.style,tabStyle=_ref9.tabStyle,testID=_ref9.testID,android_ripple=_ref9.android_ripple;var _React$useState=React.useState({width:0,height:0}),_React$useState2=_slicedToArray(_React$useState,2),layout=_React$useState2[0],setLayout=_React$useState2[1];var _React$useState3=React.useState({}),_React$useState4=_slicedToArray(_React$useState3,2),tabWidths=_React$useState4[0],setTabWidths=_React$useState4[1];var flatListRef=React.useRef(null);var isFirst=React.useRef(true);var scrollAmount=useAnimatedValue(0);var measuredTabWidths=React.useRef({});var routes=navigationState.routes;var flattenedTabWidth=getFlattenedTabWidth(tabStyle);var isWidthDynamic=flattenedTabWidth==='auto';var scrollOffset=getScrollAmount({layout:layout,navigationState:navigationState,tabWidths:tabWidths,gap:gap,scrollEnabled:scrollEnabled,flattenedTabWidth:flattenedTabWidth});var hasMeasuredTabWidths=Boolean(layout.width)&&routes.slice(0,navigationState.index).every(function(r){return typeof tabWidths[r.key]==='number';});React.useEffect(function(){if(isFirst.current){isFirst.current=false;return;}if(isWidthDynamic&&!hasMeasuredTabWidths){return;}if(scrollEnabled){var _flatListRef$current;(_flatListRef$current=flatListRef.current)===null||_flatListRef$current===void 0?void 0:_flatListRef$current.scrollToOffset({offset:scrollOffset,animated:true});}},[hasMeasuredTabWidths,isWidthDynamic,scrollEnabled,scrollOffset]);var handleLayout=function handleLayout(e){var _e$nativeEvent$layout=e.nativeEvent.layout,height=_e$nativeEvent$layout.height,width=_e$nativeEvent$layout.width;setLayout(function(layout){return layout.width===width&&layout.height===height?layout:{width:width,height:height};});};var tabBarWidth=getTabBarWidth({layout:layout,navigationState:navigationState,tabWidths:tabWidths,gap:gap,scrollEnabled:scrollEnabled,flattenedTabWidth:flattenedTabWidth});var separatorsWidth=Math.max(0,routes.length-1)*gap;var separatorPercent=separatorsWidth/tabBarWidth*100;var tabBarWidthPercent=`${routes.length*40}%`;var translateX=React.useMemo(function(){return getTranslateX(scrollAmount,getMaxScrollDistance(tabBarWidth,layout.width));},[layout.width,scrollAmount,tabBarWidth]);var renderItem=React.useCallback(function(_ref10){var route=_ref10.item,index=_ref10.index;var props={key:route.key,position:position,route:route,navigationState:navigationState,getAccessibilityLabel:getAccessibilityLabel,getAccessible:getAccessible,getLabelText:getLabelText,getTestID:getTestID,renderBadge:renderBadge,renderIcon:renderIcon,renderLabel:renderLabel,activeColor:activeColor,inactiveColor:inactiveColor,pressColor:pressColor,pressOpacity:pressOpacity,onLayout:isWidthDynamic?function(e){measuredTabWidths.current[route.key]=e.nativeEvent.layout.width;if(routes.length>MEASURE_PER_BATCH&&index===MEASURE_PER_BATCH&&routes.slice(0,MEASURE_PER_BATCH).every(function(r){return typeof measuredTabWidths.current[r.key]==='number';})){setTabWidths(_objectSpread({},measuredTabWidths.current));}else if(routes.every(function(r){return typeof measuredTabWidths.current[r.key]==='number';})){setTabWidths(_objectSpread({},measuredTabWidths.current));}}:undefined,onPress:function onPress(){var event={route:route,defaultPrevented:false,preventDefault:function preventDefault(){event.defaultPrevented=true;}};onTabPress===null||onTabPress===void 0?void 0:onTabPress(event);if(event.defaultPrevented){return;}jumpTo(route.key);},onLongPress:function onLongPress(){return onTabLongPress===null||onTabLongPress===void 0?void 0:onTabLongPress({route:route});},labelStyle:labelStyle,style:tabStyle,defaultTabWidth:!isWidthDynamic?getComputedTabWidth(index,layout,routes,scrollEnabled,tabWidths,getFlattenedTabWidth(tabStyle)):undefined,android_ripple:android_ripple};return React.createElement(React.Fragment,null,gap>0&&index>0?React.createElement(Separator,{width:gap}):null,renderTabBarItem?renderTabBarItem(props):React.createElement(TabBarItem,props));},[activeColor,android_ripple,gap,getAccessibilityLabel,getAccessible,getLabelText,getTestID,inactiveColor,isWidthDynamic,jumpTo,labelStyle,layout,navigationState,onTabLongPress,onTabPress,position,pressColor,pressOpacity,renderBadge,renderIcon,renderLabel,renderTabBarItem,routes,scrollEnabled,tabStyle,tabWidths]);var keyExtractor=React.useCallback(function(item){return item.key;},[]);var contentContainerStyleMemoized=React.useMemo(function(){return[styles.tabContent,scrollEnabled?{width:tabBarWidth>separatorsWidth?tabBarWidth:tabBarWidthPercent}:styles.container,contentContainerStyle];},[contentContainerStyle,scrollEnabled,separatorsWidth,tabBarWidth,tabBarWidthPercent]);var handleScroll=React.useMemo(function(){return Animated.event([{nativeEvent:{contentOffset:{x:scrollAmount}}}],{useNativeDriver:true});},[scrollAmount]);var handleViewableItemsChanged=useLatestCallback(function(_ref11){var changed=_ref11.changed;if(routes.length<=MEASURE_PER_BATCH){return;}var item=changed[changed.length-1];var index=(item===null||item===void 0?void 0:item.index)||0;if(item.isViewable&&(index%10===0||index===navigationState.index||index===routes.length-1)){setTabWidths(_objectSpread({},measuredTabWidths.current));}});return React.createElement(Animated.View,{onLayout:handleLayout,style:[styles.tabBar,style]},React.createElement(Animated.View,{pointerEvents:\"none\",style:[styles.indicatorContainer,scrollEnabled?{transform:[{translateX:translateX}]}:null,tabBarWidth>separatorsWidth?{width:tabBarWidth-separatorsWidth}:scrollEnabled?{width:tabBarWidthPercent}:null,indicatorContainerStyle]},renderIndicator({position:position,layout:layout,navigationState:navigationState,jumpTo:jumpTo,width:isWidthDynamic?'auto':`${(100-separatorPercent)/routes.length}%`,style:indicatorStyle,getTabWidth:function getTabWidth(i){return getComputedTabWidth(i,layout,routes,scrollEnabled,tabWidths,flattenedTabWidth);},gap:gap})),React.createElement(View,{style:styles.scroll},React.createElement(Animated.FlatList,{data:routes,keyExtractor:keyExtractor,horizontal:true,accessibilityRole:\"tablist\",keyboardShouldPersistTaps:\"handled\",scrollEnabled:scrollEnabled,bounces:bounces,initialNumToRender:MEASURE_PER_BATCH,onViewableItemsChanged:handleViewableItemsChanged,alwaysBounceHorizontal:false,scrollsToTop:false,showsHorizontalScrollIndicator:false,showsVerticalScrollIndicator:false,automaticallyAdjustContentInsets:false,overScrollMode:\"never\",contentContainerStyle:contentContainerStyleMemoized,scrollEventThrottle:16,renderItem:renderItem,onScroll:handleScroll,ref:flatListRef,testID:testID})));}var styles=StyleSheet.create({container:{flex:1},scroll:{overflow:Platform.select({default:'scroll',web:undefined})},tabBar:{backgroundColor:'#2196f3',elevation:4,shadowColor:'black',shadowOpacity:0.1,shadowRadius:StyleSheet.hairlineWidth,shadowOffset:{height:StyleSheet.hairlineWidth,width:0},zIndex:1},tabContent:{flexDirection:'row',flexWrap:'nowrap'},indicatorContainer:{position:'absolute',top:0,left:0,right:0,bottom:0}});","map":{"version":3,"names":["React","Animated","I18nManager","Platform","StyleSheet","View","useLatestCallback","TabBarIndicator","TabBarItem","useAnimatedValue","Separator","_ref","width","createElement","style","getFlattenedTabWidth","tabStyle","flatten","getComputedTabWidth","index","layout","routes","scrollEnabled","tabWidths","flattenedWidth","key","endsWith","parseFloat","Number","isFinite","length","getMaxScrollDistance","tabBarWidth","layoutWidth","getTranslateX","scrollAmount","maxScrollDistance","multiply","OS","isRTL","add","getTabBarWidth","_ref2","navigationState","gap","flattenedTabWidth","reduce","acc","_","i","normalizeScrollValue","_ref3","value","maxDistance","scrollValue","Math","max","min","getScrollAmount","_ref4","centerDistance","Array","from","total","tabWidth","getLabelTextDefault","_ref5","route","title","getAccessibleDefault","_ref6","accessible","getAccessibilityLabelDefault","_ref7","accessibilityLabel","undefined","renderIndicatorDefault","props","getTestIdDefault","_ref8","testID","MEASURE_PER_BATCH","TabBar","_ref9","_ref9$getLabelText","getLabelText","_ref9$getAccessible","getAccessible","_ref9$getAccessibilit","getAccessibilityLabel","_ref9$getTestID","getTestID","_ref9$renderIndicator","renderIndicator","_ref9$gap","jumpTo","position","activeColor","bounces","contentContainerStyle","inactiveColor","indicatorContainerStyle","indicatorStyle","labelStyle","onTabLongPress","onTabPress","pressColor","pressOpacity","renderBadge","renderIcon","renderLabel","renderTabBarItem","android_ripple","_React$useState","useState","height","_React$useState2","_slicedToArray","setLayout","_React$useState3","_React$useState4","setTabWidths","flatListRef","useRef","isFirst","measuredTabWidths","isWidthDynamic","scrollOffset","hasMeasuredTabWidths","Boolean","slice","every","r","useEffect","current","_flatListRef$current","scrollToOffset","offset","animated","handleLayout","e","_e$nativeEvent$layout","nativeEvent","separatorsWidth","separatorPercent","tabBarWidthPercent","translateX","useMemo","renderItem","useCallback","_ref10","item","onLayout","_objectSpread","onPress","event","defaultPrevented","preventDefault","onLongPress","defaultTabWidth","Fragment","keyExtractor","contentContainerStyleMemoized","styles","tabContent","container","handleScroll","contentOffset","x","useNativeDriver","handleViewableItemsChanged","_ref11","changed","isViewable","tabBar","pointerEvents","indicatorContainer","transform","getTabWidth","scroll","FlatList","data","horizontal","accessibilityRole","keyboardShouldPersistTaps","initialNumToRender","onViewableItemsChanged","alwaysBounceHorizontal","scrollsToTop","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","automaticallyAdjustContentInsets","overScrollMode","scrollEventThrottle","onScroll","ref","create","flex","overflow","select","default","web","backgroundColor","elevation","shadowColor","shadowOpacity","shadowRadius","hairlineWidth","shadowOffset","zIndex","flexDirection","flexWrap","top","left","right","bottom"],"sources":["C:\\Users\\ariel\\Desktop\\projects\\lift-finder\\v1\\my-app\\node_modules\\react-native-tab-view\\src\\TabBar.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  FlatList,\n  I18nManager,\n  LayoutChangeEvent,\n  ListRenderItemInfo,\n  Platform,\n  PressableAndroidRippleConfig,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n  ViewToken,\n} from 'react-native';\nimport useLatestCallback from 'use-latest-callback';\n\nimport { Props as IndicatorProps, TabBarIndicator } from './TabBarIndicator';\nimport { Props as TabBarItemProps, TabBarItem } from './TabBarItem';\nimport type {\n  Event,\n  Layout,\n  NavigationState,\n  Route,\n  Scene,\n  SceneRendererProps,\n} from './types';\nimport { useAnimatedValue } from './useAnimatedValue';\n\nexport type Props<T extends Route> = SceneRendererProps & {\n  navigationState: NavigationState<T>;\n  scrollEnabled?: boolean;\n  bounces?: boolean;\n  activeColor?: string;\n  inactiveColor?: string;\n  pressColor?: string;\n  pressOpacity?: number;\n  getLabelText?: (scene: Scene<T>) => string | undefined;\n  getAccessible?: (scene: Scene<T>) => boolean | undefined;\n  getAccessibilityLabel?: (scene: Scene<T>) => string | undefined;\n  getTestID?: (scene: Scene<T>) => string | undefined;\n  renderLabel?: (\n    scene: Scene<T> & {\n      focused: boolean;\n      color: string;\n    }\n  ) => React.ReactNode;\n  renderIcon?: (\n    scene: Scene<T> & {\n      focused: boolean;\n      color: string;\n    }\n  ) => React.ReactNode;\n  renderBadge?: (scene: Scene<T>) => React.ReactNode;\n  renderIndicator?: (props: IndicatorProps<T>) => React.ReactNode;\n  renderTabBarItem?: (\n    props: TabBarItemProps<T> & { key: string }\n  ) => React.ReactElement;\n  onTabPress?: (scene: Scene<T> & Event) => void;\n  onTabLongPress?: (scene: Scene<T>) => void;\n  tabStyle?: StyleProp<ViewStyle>;\n  indicatorStyle?: StyleProp<ViewStyle>;\n  indicatorContainerStyle?: StyleProp<ViewStyle>;\n  labelStyle?: StyleProp<TextStyle>;\n  contentContainerStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  gap?: number;\n  testID?: string;\n  android_ripple?: PressableAndroidRippleConfig;\n};\n\ntype FlattenedTabWidth = string | number | undefined;\n\nconst Separator = ({ width }: { width: number }) => {\n  return <View style={{ width }} />;\n};\n\nconst getFlattenedTabWidth = (style: StyleProp<ViewStyle>) => {\n  const tabStyle = StyleSheet.flatten(style);\n\n  return tabStyle?.width;\n};\n\nconst getComputedTabWidth = (\n  index: number,\n  layout: Layout,\n  routes: Route[],\n  scrollEnabled: boolean | undefined,\n  tabWidths: { [key: string]: number },\n  flattenedWidth: FlattenedTabWidth\n) => {\n  if (flattenedWidth === 'auto') {\n    return tabWidths[routes[index].key] || 0;\n  }\n\n  switch (typeof flattenedWidth) {\n    case 'number':\n      return flattenedWidth;\n    case 'string':\n      if (flattenedWidth.endsWith('%')) {\n        const width = parseFloat(flattenedWidth);\n        if (Number.isFinite(width)) {\n          return layout.width * (width / 100);\n        }\n      }\n  }\n\n  if (scrollEnabled) {\n    return (layout.width / 5) * 2;\n  }\n  return layout.width / routes.length;\n};\n\nconst getMaxScrollDistance = (tabBarWidth: number, layoutWidth: number) =>\n  tabBarWidth - layoutWidth;\n\nconst getTranslateX = (\n  scrollAmount: Animated.Value,\n  maxScrollDistance: number\n) =>\n  Animated.multiply(\n    Platform.OS === 'android' && I18nManager.isRTL\n      ? Animated.add(maxScrollDistance, Animated.multiply(scrollAmount, -1))\n      : scrollAmount,\n    I18nManager.isRTL ? 1 : -1\n  );\n\nconst getTabBarWidth = <T extends Route>({\n  navigationState,\n  layout,\n  gap,\n  scrollEnabled,\n  flattenedTabWidth,\n  tabWidths,\n}: Pick<Props<T>, 'navigationState' | 'gap' | 'layout' | 'scrollEnabled'> & {\n  tabWidths: Record<string, number>;\n  flattenedTabWidth: FlattenedTabWidth;\n}) => {\n  const { routes } = navigationState;\n\n  return routes.reduce<number>(\n    (acc, _, i) =>\n      acc +\n      (i > 0 ? gap ?? 0 : 0) +\n      getComputedTabWidth(\n        i,\n        layout,\n        routes,\n        scrollEnabled,\n        tabWidths,\n        flattenedTabWidth\n      ),\n    0\n  );\n};\n\nconst normalizeScrollValue = <T extends Route>({\n  layout,\n  navigationState,\n  gap,\n  scrollEnabled,\n  tabWidths,\n  value,\n  flattenedTabWidth,\n}: Pick<Props<T>, 'layout' | 'navigationState' | 'gap' | 'scrollEnabled'> & {\n  tabWidths: Record<string, number>;\n  value: number;\n  flattenedTabWidth: FlattenedTabWidth;\n}) => {\n  const tabBarWidth = getTabBarWidth({\n    layout,\n    navigationState,\n    tabWidths,\n    gap,\n    scrollEnabled,\n    flattenedTabWidth,\n  });\n  const maxDistance = getMaxScrollDistance(tabBarWidth, layout.width);\n  const scrollValue = Math.max(Math.min(value, maxDistance), 0);\n\n  if (Platform.OS === 'android' && I18nManager.isRTL) {\n    // On Android, scroll value is not applied in reverse in RTL\n    // so we need to manually adjust it to apply correct value\n    return maxDistance - scrollValue;\n  }\n\n  return scrollValue;\n};\n\nconst getScrollAmount = <T extends Route>({\n  layout,\n  navigationState,\n  gap,\n  scrollEnabled,\n  flattenedTabWidth,\n  tabWidths,\n}: Pick<Props<T>, 'layout' | 'navigationState' | 'scrollEnabled' | 'gap'> & {\n  tabWidths: Record<string, number>;\n  flattenedTabWidth: FlattenedTabWidth;\n}) => {\n  const centerDistance = Array.from({\n    length: navigationState.index + 1,\n  }).reduce<number>((total, _, i) => {\n    const tabWidth = getComputedTabWidth(\n      i,\n      layout,\n      navigationState.routes,\n      scrollEnabled,\n      tabWidths,\n      flattenedTabWidth\n    );\n\n    // To get the current index centered we adjust scroll amount by width of indexes\n    // 0 through (i - 1) and add half the width of current index i\n    return (\n      total +\n      (navigationState.index === i\n        ? (tabWidth + (gap ?? 0)) / 2\n        : tabWidth + (gap ?? 0))\n    );\n  }, 0);\n\n  const scrollAmount = centerDistance - layout.width / 2;\n\n  return normalizeScrollValue({\n    layout,\n    navigationState,\n    tabWidths,\n    value: scrollAmount,\n    gap,\n    scrollEnabled,\n    flattenedTabWidth,\n  });\n};\n\nconst getLabelTextDefault = ({ route }: Scene<Route>) => route.title;\n\nconst getAccessibleDefault = ({ route }: Scene<Route>) =>\n  typeof route.accessible !== 'undefined' ? route.accessible : true;\n\nconst getAccessibilityLabelDefault = ({ route }: Scene<Route>) =>\n  typeof route.accessibilityLabel === 'string'\n    ? route.accessibilityLabel\n    : typeof route.title === 'string'\n    ? route.title\n    : undefined;\n\nconst renderIndicatorDefault = (props: IndicatorProps<Route>) => (\n  <TabBarIndicator {...props} />\n);\n\nconst getTestIdDefault = ({ route }: Scene<Route>) => route.testID;\n\n// How many items measurements should we update per batch.\n// Defaults to 10, since that's whats FlatList is using in initialNumToRender.\nconst MEASURE_PER_BATCH = 10;\n\nexport function TabBar<T extends Route>({\n  getLabelText = getLabelTextDefault,\n  getAccessible = getAccessibleDefault,\n  getAccessibilityLabel = getAccessibilityLabelDefault,\n  getTestID = getTestIdDefault,\n  renderIndicator = renderIndicatorDefault,\n  gap = 0,\n  scrollEnabled,\n  jumpTo,\n  navigationState,\n  position,\n  activeColor,\n  bounces,\n  contentContainerStyle,\n  inactiveColor,\n  indicatorContainerStyle,\n  indicatorStyle,\n  labelStyle,\n  onTabLongPress,\n  onTabPress,\n  pressColor,\n  pressOpacity,\n  renderBadge,\n  renderIcon,\n  renderLabel,\n  renderTabBarItem,\n  style,\n  tabStyle,\n  testID,\n  android_ripple,\n}: Props<T>) {\n  const [layout, setLayout] = React.useState<Layout>({ width: 0, height: 0 });\n  const [tabWidths, setTabWidths] = React.useState<Record<string, number>>({});\n  const flatListRef = React.useRef<FlatList | null>(null);\n  const isFirst = React.useRef(true);\n  const scrollAmount = useAnimatedValue(0);\n  const measuredTabWidths = React.useRef<Record<string, number>>({});\n\n  const { routes } = navigationState;\n  const flattenedTabWidth = getFlattenedTabWidth(tabStyle);\n  const isWidthDynamic = flattenedTabWidth === 'auto';\n  const scrollOffset = getScrollAmount({\n    layout,\n    navigationState,\n    tabWidths,\n    gap,\n    scrollEnabled,\n    flattenedTabWidth,\n  });\n\n  const hasMeasuredTabWidths =\n    Boolean(layout.width) &&\n    routes\n      .slice(0, navigationState.index)\n      .every((r) => typeof tabWidths[r.key] === 'number');\n\n  React.useEffect(() => {\n    if (isFirst.current) {\n      isFirst.current = false;\n      return;\n    }\n\n    if (isWidthDynamic && !hasMeasuredTabWidths) {\n      return;\n    }\n\n    if (scrollEnabled) {\n      flatListRef.current?.scrollToOffset({\n        offset: scrollOffset,\n        animated: true,\n      });\n    }\n  }, [hasMeasuredTabWidths, isWidthDynamic, scrollEnabled, scrollOffset]);\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    setLayout((layout) =>\n      layout.width === width && layout.height === height\n        ? layout\n        : { width, height }\n    );\n  };\n\n  const tabBarWidth = getTabBarWidth({\n    layout,\n    navigationState,\n    tabWidths,\n    gap,\n    scrollEnabled,\n    flattenedTabWidth,\n  });\n\n  const separatorsWidth = Math.max(0, routes.length - 1) * gap;\n  const separatorPercent = (separatorsWidth / tabBarWidth) * 100;\n  const tabBarWidthPercent = `${routes.length * 40}%`;\n\n  const translateX = React.useMemo(\n    () =>\n      getTranslateX(\n        scrollAmount,\n        getMaxScrollDistance(tabBarWidth, layout.width)\n      ),\n    [layout.width, scrollAmount, tabBarWidth]\n  );\n\n  const renderItem = React.useCallback(\n    ({ item: route, index }: ListRenderItemInfo<T>) => {\n      const props: TabBarItemProps<T> & { key: string } = {\n        key: route.key,\n        position: position,\n        route: route,\n        navigationState: navigationState,\n        getAccessibilityLabel: getAccessibilityLabel,\n        getAccessible: getAccessible,\n        getLabelText: getLabelText,\n        getTestID: getTestID,\n        renderBadge: renderBadge,\n        renderIcon: renderIcon,\n        renderLabel: renderLabel,\n        activeColor: activeColor,\n        inactiveColor: inactiveColor,\n        pressColor: pressColor,\n        pressOpacity: pressOpacity,\n        onLayout: isWidthDynamic\n          ? (e: LayoutChangeEvent) => {\n              measuredTabWidths.current[route.key] = e.nativeEvent.layout.width;\n\n              // When we have measured widths for all of the tabs, we should updates the state\n              // We avoid doing separate setState for each layout since it triggers multiple renders and slows down app\n              // If we have more than 10 routes divide updating tabWidths into multiple batches. Here we update only first batch of 10 items.\n              if (\n                routes.length > MEASURE_PER_BATCH &&\n                index === MEASURE_PER_BATCH &&\n                routes\n                  .slice(0, MEASURE_PER_BATCH)\n                  .every(\n                    (r) => typeof measuredTabWidths.current[r.key] === 'number'\n                  )\n              ) {\n                setTabWidths({ ...measuredTabWidths.current });\n              } else if (\n                routes.every(\n                  (r) => typeof measuredTabWidths.current[r.key] === 'number'\n                )\n              ) {\n                // When we have measured widths for all of the tabs, we should updates the state\n                // We avoid doing separate setState for each layout since it triggers multiple renders and slows down app\n                setTabWidths({ ...measuredTabWidths.current });\n              }\n            }\n          : undefined,\n        onPress: () => {\n          const event: Scene<T> & Event = {\n            route,\n            defaultPrevented: false,\n            preventDefault: () => {\n              event.defaultPrevented = true;\n            },\n          };\n\n          onTabPress?.(event);\n\n          if (event.defaultPrevented) {\n            return;\n          }\n\n          jumpTo(route.key);\n        },\n        onLongPress: () => onTabLongPress?.({ route }),\n        labelStyle: labelStyle,\n        style: tabStyle,\n        // Calculate the deafult width for tab for FlatList to work\n        defaultTabWidth: !isWidthDynamic\n          ? getComputedTabWidth(\n              index,\n              layout,\n              routes,\n              scrollEnabled,\n              tabWidths,\n              getFlattenedTabWidth(tabStyle)\n            )\n          : undefined,\n        android_ripple,\n      };\n\n      return (\n        <>\n          {gap > 0 && index > 0 ? <Separator width={gap} /> : null}\n          {renderTabBarItem ? (\n            renderTabBarItem(props)\n          ) : (\n            <TabBarItem {...props} />\n          )}\n        </>\n      );\n    },\n    [\n      activeColor,\n      android_ripple,\n      gap,\n      getAccessibilityLabel,\n      getAccessible,\n      getLabelText,\n      getTestID,\n      inactiveColor,\n      isWidthDynamic,\n      jumpTo,\n      labelStyle,\n      layout,\n      navigationState,\n      onTabLongPress,\n      onTabPress,\n      position,\n      pressColor,\n      pressOpacity,\n      renderBadge,\n      renderIcon,\n      renderLabel,\n      renderTabBarItem,\n      routes,\n      scrollEnabled,\n      tabStyle,\n      tabWidths,\n    ]\n  );\n\n  const keyExtractor = React.useCallback((item: T) => item.key, []);\n\n  const contentContainerStyleMemoized = React.useMemo(\n    () => [\n      styles.tabContent,\n      scrollEnabled\n        ? {\n            width:\n              tabBarWidth > separatorsWidth ? tabBarWidth : tabBarWidthPercent,\n          }\n        : styles.container,\n      contentContainerStyle,\n    ],\n    [\n      contentContainerStyle,\n      scrollEnabled,\n      separatorsWidth,\n      tabBarWidth,\n      tabBarWidthPercent,\n    ]\n  );\n\n  const handleScroll = React.useMemo(\n    () =>\n      Animated.event(\n        [\n          {\n            nativeEvent: {\n              contentOffset: { x: scrollAmount },\n            },\n          },\n        ],\n        { useNativeDriver: true }\n      ),\n    [scrollAmount]\n  );\n\n  const handleViewableItemsChanged = useLatestCallback(\n    ({ changed }: { changed: ViewToken[] }) => {\n      if (routes.length <= MEASURE_PER_BATCH) {\n        return;\n      }\n      // Get next vievable item\n      const item = changed[changed.length - 1];\n      const index = item?.index || 0;\n      if (\n        item.isViewable &&\n        (index % 10 === 0 ||\n          index === navigationState.index ||\n          index === routes.length - 1)\n      ) {\n        setTabWidths({ ...measuredTabWidths.current });\n      }\n    }\n  );\n\n  return (\n    <Animated.View onLayout={handleLayout} style={[styles.tabBar, style]}>\n      <Animated.View\n        pointerEvents=\"none\"\n        style={[\n          styles.indicatorContainer,\n          scrollEnabled ? { transform: [{ translateX }] as any } : null,\n          tabBarWidth > separatorsWidth\n            ? { width: tabBarWidth - separatorsWidth }\n            : scrollEnabled\n            ? { width: tabBarWidthPercent }\n            : null,\n          indicatorContainerStyle,\n        ]}\n      >\n        {renderIndicator({\n          position,\n          layout,\n          navigationState,\n          jumpTo,\n          width: isWidthDynamic\n            ? 'auto'\n            : `${(100 - separatorPercent) / routes.length}%`,\n          style: indicatorStyle,\n          getTabWidth: (i: number) =>\n            getComputedTabWidth(\n              i,\n              layout,\n              routes,\n              scrollEnabled,\n              tabWidths,\n              flattenedTabWidth\n            ),\n          gap,\n        })}\n      </Animated.View>\n      <View style={styles.scroll}>\n        <Animated.FlatList\n          data={routes as Animated.WithAnimatedValue<T>[]}\n          keyExtractor={keyExtractor}\n          horizontal\n          accessibilityRole=\"tablist\"\n          keyboardShouldPersistTaps=\"handled\"\n          scrollEnabled={scrollEnabled}\n          bounces={bounces}\n          initialNumToRender={MEASURE_PER_BATCH}\n          onViewableItemsChanged={handleViewableItemsChanged}\n          alwaysBounceHorizontal={false}\n          scrollsToTop={false}\n          showsHorizontalScrollIndicator={false}\n          showsVerticalScrollIndicator={false}\n          automaticallyAdjustContentInsets={false}\n          overScrollMode=\"never\"\n          contentContainerStyle={contentContainerStyleMemoized}\n          scrollEventThrottle={16}\n          renderItem={renderItem}\n          onScroll={handleScroll}\n          ref={flatListRef}\n          testID={testID}\n        />\n      </View>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  scroll: {\n    overflow: Platform.select({ default: 'scroll', web: undefined }),\n  },\n  tabBar: {\n    backgroundColor: '#2196f3',\n    elevation: 4,\n    shadowColor: 'black',\n    shadowOpacity: 0.1,\n    shadowRadius: StyleSheet.hairlineWidth,\n    shadowOffset: {\n      height: StyleSheet.hairlineWidth,\n      width: 0,\n    },\n    zIndex: 1,\n  },\n  tabContent: {\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n  },\n  indicatorContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}