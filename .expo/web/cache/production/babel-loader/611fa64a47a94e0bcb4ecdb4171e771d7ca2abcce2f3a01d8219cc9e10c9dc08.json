{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"id\",\"initialRouteName\",\"backBehavior\",\"children\",\"screenListeners\",\"screenOptions\"],_excluded2=[\"swipeEnabled\",\"lazy\",\"lazyPlaceholder\",\"lazyPreloadDistance\",\"tabBarOptions\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import{createNavigatorFactory,TabRouter,useNavigationBuilder}from'@react-navigation/native';import*as React from'react';import warnOnce from'warn-once';import MaterialTopTabView from\"../views/MaterialTopTabView\";function MaterialTopTabNavigator(_ref){var id=_ref.id,initialRouteName=_ref.initialRouteName,backBehavior=_ref.backBehavior,children=_ref.children,screenListeners=_ref.screenListeners,screenOptions=_ref.screenOptions,restWithDeprecated=_objectWithoutProperties(_ref,_excluded);var swipeEnabled=restWithDeprecated.swipeEnabled,lazy=restWithDeprecated.lazy,lazyPlaceholder=restWithDeprecated.lazyPlaceholder,lazyPreloadDistance=restWithDeprecated.lazyPreloadDistance,tabBarOptions=restWithDeprecated.tabBarOptions,rest=_objectWithoutProperties(restWithDeprecated,_excluded2);var defaultScreenOptions={};if(tabBarOptions){Object.assign(defaultScreenOptions,{tabBarActiveTintColor:tabBarOptions.activeTintColor,tabBarInactiveTintColor:tabBarOptions.inactiveTintColor,tabBarPressColor:tabBarOptions.pressColor,tabBarPressOpacity:tabBarOptions.pressOpacity,tabBarShowLabel:tabBarOptions.showLabel,tabBarShowIcon:tabBarOptions.showIcon,tabBarAllowFontScaling:tabBarOptions.allowFontScaling,tabBarBounces:tabBarOptions.bounces,tabBarScrollEnabled:tabBarOptions.scrollEnabled,tabBarIconStyle:tabBarOptions.iconStyle,tabBarLabelStyle:tabBarOptions.labelStyle,tabBarItemStyle:tabBarOptions.tabStyle,tabBarBadge:tabBarOptions.renderBadge,tabBarIndicator:tabBarOptions.renderIndicator,tabBarIndicatorStyle:tabBarOptions.indicatorStyle,tabBarIndicatorContainerStyle:tabBarOptions.indicatorContainerStyle,tabBarContentContainerStyle:tabBarOptions.contentContainerStyle,tabBarStyle:tabBarOptions.style});Object.keys(defaultScreenOptions).forEach(function(key){if(defaultScreenOptions[key]===undefined){delete defaultScreenOptions[key];}});warnOnce(tabBarOptions,`Material Top Tab Navigator: 'tabBarOptions' is deprecated. Migrate the options to 'screenOptions' instead.\\n\\nPlace the following in 'screenOptions' in your code to keep current behavior:\\n\\n${JSON.stringify(defaultScreenOptions,null,2)}\\n\\nSee https://reactnavigation.org/docs/material-top-tab-navigator#options for more details.`);}var deprecatedProps={swipeEnabled:swipeEnabled,lazy:lazy,lazyPlaceholder:lazyPlaceholder,lazyPreloadDistance:lazyPreloadDistance};Object.entries(deprecatedProps).forEach(function(_ref2){var _ref3=_slicedToArray(_ref2,2),propName=_ref3[0],propValue=_ref3[1];if(propValue!==undefined){defaultScreenOptions[propName]=propValue;warnOnce(true,`Material Top Tab Navigator: '${propName}' in props is deprecated. Move it to 'screenOptions' instead.\\n\\nSee https://reactnavigation.org/docs/material-top-tab-navigator#${propName.toLowerCase()} for more details.`);}});var _useNavigationBuilder=useNavigationBuilder(TabRouter,{id:id,initialRouteName:initialRouteName,backBehavior:backBehavior,children:children,screenListeners:screenListeners,screenOptions:screenOptions,defaultScreenOptions:defaultScreenOptions}),state=_useNavigationBuilder.state,descriptors=_useNavigationBuilder.descriptors,navigation=_useNavigationBuilder.navigation,NavigationContent=_useNavigationBuilder.NavigationContent;return React.createElement(NavigationContent,null,React.createElement(MaterialTopTabView,_extends({},rest,{state:state,navigation:navigation,descriptors:descriptors})));}export default createNavigatorFactory(MaterialTopTabNavigator);","map":{"version":3,"names":["createNavigatorFactory","TabRouter","useNavigationBuilder","React","warnOnce","MaterialTopTabView","MaterialTopTabNavigator","_ref","id","initialRouteName","backBehavior","children","screenListeners","screenOptions","restWithDeprecated","_objectWithoutProperties","_excluded","swipeEnabled","lazy","lazyPlaceholder","lazyPreloadDistance","tabBarOptions","rest","_excluded2","defaultScreenOptions","Object","assign","tabBarActiveTintColor","activeTintColor","tabBarInactiveTintColor","inactiveTintColor","tabBarPressColor","pressColor","tabBarPressOpacity","pressOpacity","tabBarShowLabel","showLabel","tabBarShowIcon","showIcon","tabBarAllowFontScaling","allowFontScaling","tabBarBounces","bounces","tabBarScrollEnabled","scrollEnabled","tabBarIconStyle","iconStyle","tabBarLabelStyle","labelStyle","tabBarItemStyle","tabStyle","tabBarBadge","renderBadge","tabBarIndicator","renderIndicator","tabBarIndicatorStyle","indicatorStyle","tabBarIndicatorContainerStyle","indicatorContainerStyle","tabBarContentContainerStyle","contentContainerStyle","tabBarStyle","style","keys","forEach","key","undefined","JSON","stringify","deprecatedProps","entries","_ref2","_ref3","_slicedToArray","propName","propValue","toLowerCase","_useNavigationBuilder","state","descriptors","navigation","NavigationContent","createElement","_extends"],"sources":["C:\\Users\\ariel\\Desktop\\projects\\lift-finder\\v1\\my-app\\node_modules\\@react-navigation\\material-top-tabs\\src\\navigators\\createMaterialTopTabNavigator.tsx"],"sourcesContent":["import {\n  createNavigatorFactory,\n  DefaultNavigatorOptions,\n  ParamListBase,\n  TabActionHelpers,\n  TabNavigationState,\n  TabRouter,\n  TabRouterOptions,\n  useNavigationBuilder,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport warnOnce from 'warn-once';\n\nimport type {\n  MaterialTopTabNavigationConfig,\n  MaterialTopTabNavigationEventMap,\n  MaterialTopTabNavigationOptions,\n} from '../types';\nimport MaterialTopTabView from '../views/MaterialTopTabView';\n\ntype Props = DefaultNavigatorOptions<\n  ParamListBase,\n  TabNavigationState<ParamListBase>,\n  MaterialTopTabNavigationOptions,\n  MaterialTopTabNavigationEventMap\n> &\n  TabRouterOptions &\n  MaterialTopTabNavigationConfig;\n\nfunction MaterialTopTabNavigator({\n  id,\n  initialRouteName,\n  backBehavior,\n  children,\n  screenListeners,\n  screenOptions,\n  ...restWithDeprecated\n}: Props) {\n  const {\n    // @ts-expect-error: swipeEnabled is deprecated\n    swipeEnabled,\n    // @ts-expect-error: lazy is deprecated\n    lazy,\n    // @ts-expect-error: lazyPlaceholder is deprecated\n    lazyPlaceholder,\n    // @ts-expect-error: lazyPreloadDistance is deprecated\n    lazyPreloadDistance,\n    // @ts-expect-error: tabBarOptions is deprecated\n    tabBarOptions,\n    ...rest\n  } = restWithDeprecated;\n\n  let defaultScreenOptions: MaterialTopTabNavigationOptions = {};\n\n  if (tabBarOptions) {\n    Object.assign(defaultScreenOptions, {\n      tabBarActiveTintColor: tabBarOptions.activeTintColor,\n      tabBarInactiveTintColor: tabBarOptions.inactiveTintColor,\n      tabBarPressColor: tabBarOptions.pressColor,\n      tabBarPressOpacity: tabBarOptions.pressOpacity,\n      tabBarShowLabel: tabBarOptions.showLabel,\n      tabBarShowIcon: tabBarOptions.showIcon,\n      tabBarAllowFontScaling: tabBarOptions.allowFontScaling,\n      tabBarBounces: tabBarOptions.bounces,\n      tabBarScrollEnabled: tabBarOptions.scrollEnabled,\n      tabBarIconStyle: tabBarOptions.iconStyle,\n      tabBarLabelStyle: tabBarOptions.labelStyle,\n      tabBarItemStyle: tabBarOptions.tabStyle,\n      tabBarBadge: tabBarOptions.renderBadge,\n      tabBarIndicator: tabBarOptions.renderIndicator,\n      tabBarIndicatorStyle: tabBarOptions.indicatorStyle,\n      tabBarIndicatorContainerStyle: tabBarOptions.indicatorContainerStyle,\n      tabBarContentContainerStyle: tabBarOptions.contentContainerStyle,\n      tabBarStyle: tabBarOptions.style,\n    });\n\n    (\n      Object.keys(\n        defaultScreenOptions\n      ) as (keyof MaterialTopTabNavigationOptions)[]\n    ).forEach((key) => {\n      if (defaultScreenOptions[key] === undefined) {\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete defaultScreenOptions[key];\n      }\n    });\n\n    warnOnce(\n      tabBarOptions,\n      `Material Top Tab Navigator: 'tabBarOptions' is deprecated. Migrate the options to 'screenOptions' instead.\\n\\nPlace the following in 'screenOptions' in your code to keep current behavior:\\n\\n${JSON.stringify(\n        defaultScreenOptions,\n        null,\n        2\n      )}\\n\\nSee https://reactnavigation.org/docs/material-top-tab-navigator#options for more details.`\n    );\n  }\n\n  const deprecatedProps = {\n    swipeEnabled,\n    lazy,\n    lazyPlaceholder,\n    lazyPreloadDistance,\n  } as const;\n\n  Object.entries(deprecatedProps).forEach(([propName, propValue]) => {\n    if (propValue !== undefined) {\n      // @ts-expect-error: Object.entries doesn't return strict types\n      defaultScreenOptions[propName] = propValue;\n\n      warnOnce(\n        true,\n        `Material Top Tab Navigator: '${propName}' in props is deprecated. Move it to 'screenOptions' instead.\\n\\nSee https://reactnavigation.org/docs/material-top-tab-navigator#${propName.toLowerCase()} for more details.`\n      );\n    }\n  });\n\n  const { state, descriptors, navigation, NavigationContent } =\n    useNavigationBuilder<\n      TabNavigationState<ParamListBase>,\n      TabRouterOptions,\n      TabActionHelpers<ParamListBase>,\n      MaterialTopTabNavigationOptions,\n      MaterialTopTabNavigationEventMap\n    >(TabRouter, {\n      id,\n      initialRouteName,\n      backBehavior,\n      children,\n      screenListeners,\n      screenOptions,\n      defaultScreenOptions,\n    });\n\n  return (\n    <NavigationContent>\n      <MaterialTopTabView\n        {...rest}\n        state={state}\n        navigation={navigation}\n        descriptors={descriptors}\n      />\n    </NavigationContent>\n  );\n}\n\nexport default createNavigatorFactory<\n  TabNavigationState<ParamListBase>,\n  MaterialTopTabNavigationOptions,\n  MaterialTopTabNavigationEventMap,\n  typeof MaterialTopTabNavigator\n>(MaterialTopTabNavigator);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}