{"ast":null,"code":"import{addEventListener}from\"../addEventListener\";import useLayoutEffect from\"../useLayoutEffect\";import useStable from\"../useStable\";export default function useEvent(eventType,options){var targetListeners=useStable(function(){return new Map();});var addListener=useStable(function(){return function(target,callback){var removeTargetListener=targetListeners.get(target);if(removeTargetListener!=null){removeTargetListener();}if(callback==null){targetListeners.delete(target);callback=function callback(){};}var removeEventListener=addEventListener(target,eventType,callback,options);targetListeners.set(target,removeEventListener);return removeEventListener;};});useLayoutEffect(function(){return function(){targetListeners.forEach(function(removeListener){removeListener();});targetListeners.clear();};},[targetListeners]);return addListener;}","map":{"version":3,"names":["addEventListener","useLayoutEffect","useStable","useEvent","eventType","options","targetListeners","Map","addListener","target","callback","removeTargetListener","get","delete","removeEventListener","set","forEach","removeListener","clear"],"sources":["C:/Users/ariel/Desktop/projects/lift-finder/v1/my-app/node_modules/react-native-web/dist/modules/useEvent/index.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport { addEventListener } from '../addEventListener';\nimport useLayoutEffect from '../useLayoutEffect';\nimport useStable from '../useStable';\n/**\n * This can be used with any event type include custom events.\n *\n * const click = useEvent('click', options);\n * useEffect(() => {\n *   click.setListener(target, onClick);\n *   return () => click.clear();\n * }).\n */\nexport default function useEvent(eventType, options) {\n  var targetListeners = useStable(() => new Map());\n  var addListener = useStable(() => {\n    return (target, callback) => {\n      var removeTargetListener = targetListeners.get(target);\n      if (removeTargetListener != null) {\n        removeTargetListener();\n      }\n      if (callback == null) {\n        targetListeners.delete(target);\n        callback = () => {};\n      }\n      var removeEventListener = addEventListener(target, eventType, callback, options);\n      targetListeners.set(target, removeEventListener);\n      return removeEventListener;\n    };\n  });\n  useLayoutEffect(() => {\n    return () => {\n      targetListeners.forEach(removeListener => {\n        removeListener();\n      });\n      targetListeners.clear();\n    };\n  }, [targetListeners]);\n  return addListener;\n}"],"mappings":"AASA,OAASA,gBAAgB,2BACzB,MAAO,CAAAC,eAAe,0BACtB,MAAO,CAAAC,SAAS,oBAUhB,cAAe,SAAS,CAAAC,QAAQA,CAACC,SAAS,CAAEC,OAAO,CAAE,CACnD,GAAI,CAAAC,eAAe,CAAGJ,SAAS,CAAC,iBAAM,IAAI,CAAAK,GAAG,CAAC,CAAC,GAAC,CAChD,GAAI,CAAAC,WAAW,CAAGN,SAAS,CAAC,UAAM,CAChC,MAAO,UAACO,MAAM,CAAEC,QAAQ,CAAK,CAC3B,GAAI,CAAAC,oBAAoB,CAAGL,eAAe,CAACM,GAAG,CAACH,MAAM,CAAC,CACtD,GAAIE,oBAAoB,EAAI,IAAI,CAAE,CAChCA,oBAAoB,CAAC,CAAC,CACxB,CACA,GAAID,QAAQ,EAAI,IAAI,CAAE,CACpBJ,eAAe,CAACO,MAAM,CAACJ,MAAM,CAAC,CAC9BC,QAAQ,CAAG,SAAAA,SAAA,CAAM,CAAC,CAAC,CACrB,CACA,GAAI,CAAAI,mBAAmB,CAAGd,gBAAgB,CAACS,MAAM,CAAEL,SAAS,CAAEM,QAAQ,CAAEL,OAAO,CAAC,CAChFC,eAAe,CAACS,GAAG,CAACN,MAAM,CAAEK,mBAAmB,CAAC,CAChD,MAAO,CAAAA,mBAAmB,CAC5B,CAAC,CACH,CAAC,CAAC,CACFb,eAAe,CAAC,UAAM,CACpB,MAAO,WAAM,CACXK,eAAe,CAACU,OAAO,CAAC,SAAAC,cAAc,CAAI,CACxCA,cAAc,CAAC,CAAC,CAClB,CAAC,CAAC,CACFX,eAAe,CAACY,KAAK,CAAC,CAAC,CACzB,CAAC,CACH,CAAC,CAAE,CAACZ,eAAe,CAAC,CAAC,CACrB,MAAO,CAAAE,WAAW,CACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}